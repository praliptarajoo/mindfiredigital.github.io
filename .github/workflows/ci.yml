name: Continuous Integration Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: 'Build Mindfire FOSS application'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 'Install dependencies'
        run: npm install

      - name: 'Build application'
        run: npm run build
      
      - name: 'Restore changes in json'
        run: |
          git restore src/app/projects/assets/upcomingProjects.json
          git restore src/app/projects/assets/projects.json

      - name: 'Fetch branches'
        run: git fetch origin
      
      - name: 'Set Git user name and email'
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"

      - name: 'Copy build artifacts to gh-pages branch'
        run: |
          mkdir /tmp/temp-directory
          shopt -s dotglob
          cp -r build/* /tmp/temp-directory/
          shopt -u dotglob
          git checkout gh-pages
          rm -rf *
          rm -rf .nojekyll
          shopt -s dotglob
          cp -r /tmp/temp-directory/* .
          shopt -u dotglob
          git add . -f 
          git commit -m "Copy build artifacts from main to gh-pages branch"

      - name: Push to gh-pages
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin gh-pages

      - name: 'Switch back to main branch'
        run: |
          git checkout main
  create-github-release:
    name: Create Github release
    runs-on: ubuntu-latest
    needs: build
    steps: 
      - name: Checkout code 
        uses: actions/checkout@v2
        
      - name: Create release notes
        id: create-new-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
      
      - name: Archive site content 
        uses: thedoctor0/zip-release@0.7.5
        with: 
          filename: my-artifact.zip

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: ./my-artifact.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip
